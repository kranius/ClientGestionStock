//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//
//     Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdus si
//     le code est regénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WSGestionStock
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Article", Namespace="http://schemas.datacontract.org/2004/07/WcfWS_TPGestionStock.Model")]
    public partial class Article : object
    {
        
        private WSGestionStock.Categorie CategorieField;
        
        private string DesignationField;
        
        private int IdField;
        
        private System.Nullable<double> PrixField;
        
        private System.Nullable<int> QteMiniField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WSGestionStock.Categorie Categorie
        {
            get
            {
                return this.CategorieField;
            }
            set
            {
                this.CategorieField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Designation
        {
            get
            {
                return this.DesignationField;
            }
            set
            {
                this.DesignationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Prix
        {
            get
            {
                return this.PrixField;
            }
            set
            {
                this.PrixField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QteMini
        {
            get
            {
                return this.QteMiniField;
            }
            set
            {
                this.QteMiniField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Categorie", Namespace="http://schemas.datacontract.org/2004/07/WcfWS_TPGestionStock.Model")]
    public partial class Categorie : object
    {
        
        private int IdField;
        
        private string InfoField;
        
        private string NomField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Info
        {
            get
            {
                return this.InfoField;
            }
            set
            {
                this.InfoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom
        {
            get
            {
                return this.NomField;
            }
            set
            {
                this.NomField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSGestionStock.IGestionStock")]
    public interface IGestionStock
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionStock/AjoutArticle", ReplyAction="http://tempuri.org/IGestionStock/AjoutArticleResponse")]
        int AjoutArticle(WSGestionStock.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionStock/AjoutArticle", ReplyAction="http://tempuri.org/IGestionStock/AjoutArticleResponse")]
        System.Threading.Tasks.Task<int> AjoutArticleAsync(WSGestionStock.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionStock/ModificationArticle", ReplyAction="http://tempuri.org/IGestionStock/ModificationArticleResponse")]
        WSGestionStock.Article ModificationArticle(WSGestionStock.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionStock/ModificationArticle", ReplyAction="http://tempuri.org/IGestionStock/ModificationArticleResponse")]
        System.Threading.Tasks.Task<WSGestionStock.Article> ModificationArticleAsync(WSGestionStock.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionStock/SuppressionArticle", ReplyAction="http://tempuri.org/IGestionStock/SuppressionArticleResponse")]
        bool SuppressionArticle(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionStock/SuppressionArticle", ReplyAction="http://tempuri.org/IGestionStock/SuppressionArticleResponse")]
        System.Threading.Tasks.Task<bool> SuppressionArticleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionStock/GetArticles", ReplyAction="http://tempuri.org/IGestionStock/GetArticlesResponse")]
        WSGestionStock.Article[] GetArticles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionStock/GetArticles", ReplyAction="http://tempuri.org/IGestionStock/GetArticlesResponse")]
        System.Threading.Tasks.Task<WSGestionStock.Article[]> GetArticlesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionStock/RechercherArticlesById", ReplyAction="http://tempuri.org/IGestionStock/RechercherArticlesByIdResponse")]
        WSGestionStock.Article RechercherArticlesById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionStock/RechercherArticlesById", ReplyAction="http://tempuri.org/IGestionStock/RechercherArticlesByIdResponse")]
        System.Threading.Tasks.Task<WSGestionStock.Article> RechercherArticlesByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionStock/RechercherArticlesByMotCle", ReplyAction="http://tempuri.org/IGestionStock/RechercherArticlesByMotCleResponse")]
        WSGestionStock.Article[] RechercherArticlesByMotCle(string mot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionStock/RechercherArticlesByMotCle", ReplyAction="http://tempuri.org/IGestionStock/RechercherArticlesByMotCleResponse")]
        System.Threading.Tasks.Task<WSGestionStock.Article[]> RechercherArticlesByMotCleAsync(string mot);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface IGestionStockChannel : WSGestionStock.IGestionStock, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class GestionStockClient : System.ServiceModel.ClientBase<WSGestionStock.IGestionStock>, WSGestionStock.IGestionStock
    {
        
        /// <summary>
        /// Implémentez cette méthode partielle pour configurer le point de terminaison de service.
        /// </summary>
        /// <param name="serviceEndpoint">Point de terminaison à configurer</param>
        /// <param name="clientCredentials">Informations d'identification du client</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public GestionStockClient() : 
                base(GestionStockClient.GetDefaultBinding(), GestionStockClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IGestionStock.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GestionStockClient(EndpointConfiguration endpointConfiguration) : 
                base(GestionStockClient.GetBindingForEndpoint(endpointConfiguration), GestionStockClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GestionStockClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(GestionStockClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GestionStockClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(GestionStockClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GestionStockClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public int AjoutArticle(WSGestionStock.Article article)
        {
            return base.Channel.AjoutArticle(article);
        }
        
        public System.Threading.Tasks.Task<int> AjoutArticleAsync(WSGestionStock.Article article)
        {
            return base.Channel.AjoutArticleAsync(article);
        }
        
        public WSGestionStock.Article ModificationArticle(WSGestionStock.Article article)
        {
            return base.Channel.ModificationArticle(article);
        }
        
        public System.Threading.Tasks.Task<WSGestionStock.Article> ModificationArticleAsync(WSGestionStock.Article article)
        {
            return base.Channel.ModificationArticleAsync(article);
        }
        
        public bool SuppressionArticle(int id)
        {
            return base.Channel.SuppressionArticle(id);
        }
        
        public System.Threading.Tasks.Task<bool> SuppressionArticleAsync(int id)
        {
            return base.Channel.SuppressionArticleAsync(id);
        }
        
        public WSGestionStock.Article[] GetArticles()
        {
            return base.Channel.GetArticles();
        }
        
        public System.Threading.Tasks.Task<WSGestionStock.Article[]> GetArticlesAsync()
        {
            return base.Channel.GetArticlesAsync();
        }
        
        public WSGestionStock.Article RechercherArticlesById(int id)
        {
            return base.Channel.RechercherArticlesById(id);
        }
        
        public System.Threading.Tasks.Task<WSGestionStock.Article> RechercherArticlesByIdAsync(int id)
        {
            return base.Channel.RechercherArticlesByIdAsync(id);
        }
        
        public WSGestionStock.Article[] RechercherArticlesByMotCle(string mot)
        {
            return base.Channel.RechercherArticlesByMotCle(mot);
        }
        
        public System.Threading.Tasks.Task<WSGestionStock.Article[]> RechercherArticlesByMotCleAsync(string mot)
        {
            return base.Channel.RechercherArticlesByMotCleAsync(mot);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IGestionStock))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Le point de terminaison nommé \'{0}\' est introuvable.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IGestionStock))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost/GestionStock.svc");
            }
            throw new System.InvalidOperationException(string.Format("Le point de terminaison nommé \'{0}\' est introuvable.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return GestionStockClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IGestionStock);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return GestionStockClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IGestionStock);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IGestionStock,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSGestionStock.IGestionCategorie")]
    public interface IGestionCategorie
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCategorie/AjoutCategorie", ReplyAction="http://tempuri.org/IGestionCategorie/AjoutCategorieResponse")]
        int AjoutCategorie(WSGestionStock.Categorie categorie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCategorie/AjoutCategorie", ReplyAction="http://tempuri.org/IGestionCategorie/AjoutCategorieResponse")]
        System.Threading.Tasks.Task<int> AjoutCategorieAsync(WSGestionStock.Categorie categorie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCategorie/ModificationCategorie", ReplyAction="http://tempuri.org/IGestionCategorie/ModificationCategorieResponse")]
        WSGestionStock.Categorie ModificationCategorie(WSGestionStock.Categorie categorie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCategorie/ModificationCategorie", ReplyAction="http://tempuri.org/IGestionCategorie/ModificationCategorieResponse")]
        System.Threading.Tasks.Task<WSGestionStock.Categorie> ModificationCategorieAsync(WSGestionStock.Categorie categorie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCategorie/SuppressionCategorie", ReplyAction="http://tempuri.org/IGestionCategorie/SuppressionCategorieResponse")]
        bool SuppressionCategorie(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCategorie/SuppressionCategorie", ReplyAction="http://tempuri.org/IGestionCategorie/SuppressionCategorieResponse")]
        System.Threading.Tasks.Task<bool> SuppressionCategorieAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCategorie/GetCategories", ReplyAction="http://tempuri.org/IGestionCategorie/GetCategoriesResponse")]
        WSGestionStock.Categorie[] GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCategorie/GetCategories", ReplyAction="http://tempuri.org/IGestionCategorie/GetCategoriesResponse")]
        System.Threading.Tasks.Task<WSGestionStock.Categorie[]> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCategorie/RechercherCategoriesById", ReplyAction="http://tempuri.org/IGestionCategorie/RechercherCategoriesByIdResponse")]
        WSGestionStock.Categorie RechercherCategoriesById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCategorie/RechercherCategoriesById", ReplyAction="http://tempuri.org/IGestionCategorie/RechercherCategoriesByIdResponse")]
        System.Threading.Tasks.Task<WSGestionStock.Categorie> RechercherCategoriesByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCategorie/RechercherCategoriesByMotCle", ReplyAction="http://tempuri.org/IGestionCategorie/RechercherCategoriesByMotCleResponse")]
        WSGestionStock.Categorie[] RechercherCategoriesByMotCle(string nom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCategorie/RechercherCategoriesByMotCle", ReplyAction="http://tempuri.org/IGestionCategorie/RechercherCategoriesByMotCleResponse")]
        System.Threading.Tasks.Task<WSGestionStock.Categorie[]> RechercherCategoriesByMotCleAsync(string nom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCategorie/GetArticlesByCategorie", ReplyAction="http://tempuri.org/IGestionCategorie/GetArticlesByCategorieResponse")]
        WSGestionStock.Article[] GetArticlesByCategorie(int categorieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionCategorie/GetArticlesByCategorie", ReplyAction="http://tempuri.org/IGestionCategorie/GetArticlesByCategorieResponse")]
        System.Threading.Tasks.Task<WSGestionStock.Article[]> GetArticlesByCategorieAsync(int categorieId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface IGestionCategorieChannel : WSGestionStock.IGestionCategorie, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class GestionCategorieClient : System.ServiceModel.ClientBase<WSGestionStock.IGestionCategorie>, WSGestionStock.IGestionCategorie
    {
        
        /// <summary>
        /// Implémentez cette méthode partielle pour configurer le point de terminaison de service.
        /// </summary>
        /// <param name="serviceEndpoint">Point de terminaison à configurer</param>
        /// <param name="clientCredentials">Informations d'identification du client</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public GestionCategorieClient() : 
                base(GestionCategorieClient.GetDefaultBinding(), GestionCategorieClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IGestionCategorie.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GestionCategorieClient(EndpointConfiguration endpointConfiguration) : 
                base(GestionCategorieClient.GetBindingForEndpoint(endpointConfiguration), GestionCategorieClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GestionCategorieClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(GestionCategorieClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GestionCategorieClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(GestionCategorieClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GestionCategorieClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public int AjoutCategorie(WSGestionStock.Categorie categorie)
        {
            return base.Channel.AjoutCategorie(categorie);
        }
        
        public System.Threading.Tasks.Task<int> AjoutCategorieAsync(WSGestionStock.Categorie categorie)
        {
            return base.Channel.AjoutCategorieAsync(categorie);
        }
        
        public WSGestionStock.Categorie ModificationCategorie(WSGestionStock.Categorie categorie)
        {
            return base.Channel.ModificationCategorie(categorie);
        }
        
        public System.Threading.Tasks.Task<WSGestionStock.Categorie> ModificationCategorieAsync(WSGestionStock.Categorie categorie)
        {
            return base.Channel.ModificationCategorieAsync(categorie);
        }
        
        public bool SuppressionCategorie(int id)
        {
            return base.Channel.SuppressionCategorie(id);
        }
        
        public System.Threading.Tasks.Task<bool> SuppressionCategorieAsync(int id)
        {
            return base.Channel.SuppressionCategorieAsync(id);
        }
        
        public WSGestionStock.Categorie[] GetCategories()
        {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<WSGestionStock.Categorie[]> GetCategoriesAsync()
        {
            return base.Channel.GetCategoriesAsync();
        }
        
        public WSGestionStock.Categorie RechercherCategoriesById(int id)
        {
            return base.Channel.RechercherCategoriesById(id);
        }
        
        public System.Threading.Tasks.Task<WSGestionStock.Categorie> RechercherCategoriesByIdAsync(int id)
        {
            return base.Channel.RechercherCategoriesByIdAsync(id);
        }
        
        public WSGestionStock.Categorie[] RechercherCategoriesByMotCle(string nom)
        {
            return base.Channel.RechercherCategoriesByMotCle(nom);
        }
        
        public System.Threading.Tasks.Task<WSGestionStock.Categorie[]> RechercherCategoriesByMotCleAsync(string nom)
        {
            return base.Channel.RechercherCategoriesByMotCleAsync(nom);
        }
        
        public WSGestionStock.Article[] GetArticlesByCategorie(int categorieId)
        {
            return base.Channel.GetArticlesByCategorie(categorieId);
        }
        
        public System.Threading.Tasks.Task<WSGestionStock.Article[]> GetArticlesByCategorieAsync(int categorieId)
        {
            return base.Channel.GetArticlesByCategorieAsync(categorieId);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IGestionCategorie))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Le point de terminaison nommé \'{0}\' est introuvable.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IGestionCategorie))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost/GestionStock.svc");
            }
            throw new System.InvalidOperationException(string.Format("Le point de terminaison nommé \'{0}\' est introuvable.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return GestionCategorieClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IGestionCategorie);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return GestionCategorieClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IGestionCategorie);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IGestionCategorie,
        }
    }
}
